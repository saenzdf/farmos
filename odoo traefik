networks:
  web:
    driver: bridge
  internal:
    driver: bridge

volumes:
  odoo-db-data:
  traefik-certificates:

services:
  ################################################################
  # 1) PostgreSQL (Database)
  ################################################################
  db:
    image: postgres:15
    # Best Practice: Remove container_name for portability.
    container_name: odoo-db

    restart: unless-stopped
    env_file: .env
    environment:
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      POSTGRES_DB: "${POSTGRES_DB}"
    volumes:
      - odoo-db-data:/var/lib/postgresql/data
    networks:
      - internal

    # Best Practice: Consider adding a healthcheck if needed
    # healthcheck:
    #   test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB} || exit 1"]
    #   interval: 10s
    #   timeout: 5s
    #   retries: 3
 ################################################################
  # 2) traefik (reverse proxy)
  ################################################################
  traefik:
    image: traefik:v2.10
    container_name: traefik
    restart: unless-stopped
    env_file: .env

    ports:
      - "80:80"
      - "443:443"

    command:
      - --api.dashboard=true
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --providers.file.filename=/etc/traefik/dynamic.yml
      - --providers.docker.network=web

      - --entrypoints.http.address=:80
      - --entrypoints.https.address=:443

      - --certificatesresolvers.le.acme.httpchallenge=true
      - --certificatesresolvers.le.acme.httpchallenge.entrypoint=http
      - --certificatesresolvers.le.acme.email="${LETS_ENCRYPT_CONTACT_EMAIL}"
      - --certificatesresolvers.le.acme.storage=/letsencrypt/acme.json

      - --log.level=INFO

    networks:
      - web

    volumes:
      - traefik-certificates:/letsencrypt
      - ./traefik/conf/dynamic.yml:/dynamic.yml
      - /var/run/docker.sock:/var/run/docker.sock:ro

    labels:
      traefik.enable: "true"

      # HTTP router with middleware for HTTPS redirection
      traefik.http.routers.traefik.rule: Host("${TRAEFIK_HOSTNAME}")
      traefik.http.routers.traefik.entrypoints: http
      traefik.http.routers.traefik.middlewares: "redirect@file"

      # HTTPS router with Let's Encrypt
      traefik.http.routers.traefik-https.rule: Host("${TRAEFIK_HOSTNAME}")
      traefik.http.routers.traefik-https.entrypoints: https
      traefik.http.routers.traefik-https.tls: "true"
      traefik.http.routers.traefik-https.tls.certresolver: le

      # Internal dashboard service
#      traefik.http.services.traefik.loadbalancer.server.port: "8080"

  ################################################################
  # 3) Odoo (Application)
  ################################################################
  odoo:
    image: odoo:18.0
    container_name: odoo
    depends_on:
      - db
    restart: unless-stopped
    env_file: .env

    environment:
      HOST: db
      PORT: 5432
      USER: "${POSTGRES_USER}"
      PASSWORD: "${POSTGRES_PASSWORD}"
      # If you have a specific DB to auto-connect, you can add:
      DATABASE: "${POSTGRES_DB}"
      # For Odoo master password, you can set ODOO_MASTER_PASSWD or MASTER_PASSWD

    networks:
      - web
      - internal

    volumes:
      - "${BASE_VOLUME_DIR}/odoo/extra-addons:/opt/odoo/extra-addons"
      - "${BASE_VOLUME_DIR}/odoo/data:/var/lib/odoo"  # Official location for Odoo data
      - "${BASE_VOLUME_DIR}/odoo/logs:/opt/odoo/logs"
      - ./odoo.conf:/etc/odoo/odoo.conf


    ulimits:
      nofile:
        soft: 65536
        hard: 65536

    labels:
      traefik.enable: "true"

      # HTTP â†’ HTTPS redirect
      traefik.http.routers.odoo-http.rule: Host("${ODOO_HOSTNAME}")
      traefik.http.routers.odoo-http.entrypoints: http
      traefik.http.routers.odoo-http.middlewares: "redirect@file"

      # HTTPS route
      traefik.http.routers.odoo-https.rule: Host("${ODOO_HOSTNAME}")
      traefik.http.routers.odoo-https.entrypoints: https
      traefik.http.routers.odoo-https.tls.certresolver: le

      # Odoo listens on port 8069 internally
      traefik.http.services.odoo.loadbalancer.server.port: "8069"


